<?php

namespace ContainerEMEnNXa;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_ServiceLocator_We2KsejService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator.We2Ksej' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.We2Ksej'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'kernel::registerContainerConfiguration' => ['privates', '.service_locator.4wc4Ag1.kernel::registerContainerConfiguration()', 'get_ServiceLocator_4wc4Ag1_KernelregisterContainerConfigurationService', true],
            'App\\Kernel::registerContainerConfiguration' => ['privates', '.service_locator.4wc4Ag1.kernel::registerContainerConfiguration()', 'get_ServiceLocator_4wc4Ag1_KernelregisterContainerConfigurationService', true],
            'kernel::loadRoutes' => ['privates', '.service_locator.4wc4Ag1.kernel::loadRoutes()', 'get_ServiceLocator_4wc4Ag1_KernelloadRoutesService', true],
            'App\\Kernel::loadRoutes' => ['privates', '.service_locator.4wc4Ag1.kernel::loadRoutes()', 'get_ServiceLocator_4wc4Ag1_KernelloadRoutesService', true],
            'App\\Controller\\LoginController::Login' => ['privates', '.service_locator.oHtiEqS.App\\Controller\\LoginController::Login()', 'getLoginControllerLoginService', true],
            'App\\Controller\\LoginController::recoveryAccount' => ['privates', '.service_locator.N5aefLh.App\\Controller\\LoginController::recoveryAccount()', 'getLoginControllerrecoveryAccountService', true],
            'App\\Controller\\RoleController::addRole' => ['privates', '.service_locator.bIZOrlv.App\\Controller\\RoleController::addRole()', 'getRoleControlleraddRoleService', true],
            'App\\Controller\\RoleController::updateRole' => ['privates', '.service_locator.bIZOrlv.App\\Controller\\RoleController::updateRole()', 'getRoleControllerupdateRoleService', true],
            'App\\Controller\\UserController::add' => ['privates', '.service_locator.R7hZWdi.App\\Controller\\UserController::add()', 'getUserControlleraddService', true],
            'App\\Controller\\UserController::validade' => ['privates', '.service_locator.R7hZWdi.App\\Controller\\UserController::validade()', 'getUserControllervalidadeService', true],
            'App\\Controller\\UserController::update' => ['privates', '.service_locator.R7hZWdi.App\\Controller\\UserController::update()', 'getUserControllerupdateService', true],
            'App\\Controller\\UserController::confirmPasswordReset' => ['privates', '.service_locator.DfUJhC2.App\\Controller\\UserController::confirmPasswordReset()', 'getUserControllerconfirmPasswordResetService', true],
            'kernel:registerContainerConfiguration' => ['privates', '.service_locator.4wc4Ag1.kernel::registerContainerConfiguration()', 'get_ServiceLocator_4wc4Ag1_KernelregisterContainerConfigurationService', true],
            'kernel:loadRoutes' => ['privates', '.service_locator.4wc4Ag1.kernel::loadRoutes()', 'get_ServiceLocator_4wc4Ag1_KernelloadRoutesService', true],
            'App\\Controller\\LoginController:Login' => ['privates', '.service_locator.oHtiEqS.App\\Controller\\LoginController::Login()', 'getLoginControllerLoginService', true],
            'App\\Controller\\LoginController:recoveryAccount' => ['privates', '.service_locator.N5aefLh.App\\Controller\\LoginController::recoveryAccount()', 'getLoginControllerrecoveryAccountService', true],
            'App\\Controller\\RoleController:addRole' => ['privates', '.service_locator.bIZOrlv.App\\Controller\\RoleController::addRole()', 'getRoleControlleraddRoleService', true],
            'App\\Controller\\RoleController:updateRole' => ['privates', '.service_locator.bIZOrlv.App\\Controller\\RoleController::updateRole()', 'getRoleControllerupdateRoleService', true],
            'App\\Controller\\UserController:add' => ['privates', '.service_locator.R7hZWdi.App\\Controller\\UserController::add()', 'getUserControlleraddService', true],
            'App\\Controller\\UserController:validade' => ['privates', '.service_locator.R7hZWdi.App\\Controller\\UserController::validade()', 'getUserControllervalidadeService', true],
            'App\\Controller\\UserController:update' => ['privates', '.service_locator.R7hZWdi.App\\Controller\\UserController::update()', 'getUserControllerupdateService', true],
            'App\\Controller\\UserController:confirmPasswordReset' => ['privates', '.service_locator.DfUJhC2.App\\Controller\\UserController::confirmPasswordReset()', 'getUserControllerconfirmPasswordResetService', true],
        ], [
            'kernel::registerContainerConfiguration' => '?',
            'App\\Kernel::registerContainerConfiguration' => '?',
            'kernel::loadRoutes' => '?',
            'App\\Kernel::loadRoutes' => '?',
            'App\\Controller\\LoginController::Login' => '?',
            'App\\Controller\\LoginController::recoveryAccount' => '?',
            'App\\Controller\\RoleController::addRole' => '?',
            'App\\Controller\\RoleController::updateRole' => '?',
            'App\\Controller\\UserController::add' => '?',
            'App\\Controller\\UserController::validade' => '?',
            'App\\Controller\\UserController::update' => '?',
            'App\\Controller\\UserController::confirmPasswordReset' => '?',
            'kernel:registerContainerConfiguration' => '?',
            'kernel:loadRoutes' => '?',
            'App\\Controller\\LoginController:Login' => '?',
            'App\\Controller\\LoginController:recoveryAccount' => '?',
            'App\\Controller\\RoleController:addRole' => '?',
            'App\\Controller\\RoleController:updateRole' => '?',
            'App\\Controller\\UserController:add' => '?',
            'App\\Controller\\UserController:validade' => '?',
            'App\\Controller\\UserController:update' => '?',
            'App\\Controller\\UserController:confirmPasswordReset' => '?',
        ]);
    }
}
