name: Symfony

on:
  push:
    branches: [ "release" ]
  pull_request:
    branches: [ "release" ]

permissions:
  contents: read

jobs:
  symfony-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: shivammathur/setup-php@2cb9b829437ee246e9b3cac53555a39208ca6d28
      with:
        php-version: '8.3'
    - uses: actions/checkout@v4
    
    # Copiar o arquivo .env.test.local se não existir
    - name: Copy .env.test.local
      run: |
        if [ ! -f .env.test.local ]; then
          cp .env.test .env.test.local
        fi
    
    # Cache de pacotes do Composer
    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-
    
    # Instalar dependências do Composer
    - name: Install Dependencies
      run: composer install --prefer-dist --no-interaction --optimize-autoloader
    
    # Criar banco de dados SQLite
    - name: Create Database
      run: |
        mkdir -p data
        touch data/database.sqlite
        # Se usar SQLite, verifique se o banco de dados está na configuração do Symfony.
    
    # Atualizar o autoloader do Composer
    - name: Composer autoload
      run: composer dump-autoload
    
    # Executar os testes (Unit e Feature)
    - name: Execute tests (Unit and Feature tests) via PHPUnit
      env:
        DATABASE_URL: sqlite:///%kernel.project_dir%/data/database.sqlite
      run: vendor/bin/phpunit --configuration phpunit.xml.dist
